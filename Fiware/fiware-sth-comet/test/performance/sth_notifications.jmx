<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2015 Telefonica Investigación y Desarrollo, S.A.U

 This file is part of Short Term Historic (FI-WARE project).

 iot-sth is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General
 Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any
 later version.
 iot-sth is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License along with iot-sth. If not, see
 http://www.gnu.org/licenses/.

 For those usages not covered by the GNU Affero General Public License please contact:
 iot_support at tid.es

author: 'Iván Arias León (ivan.ariasleon at telefonica dot com)'
--->
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="STH Load Test (Notifications)" enabled="true">
      <stringProp name="TestPlan.comments">Script to generate notifications to validate sth load test, using 10 threads groups (services)</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables definidas por el Usuario" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="TESTNAME" elementType="Argument">
            <stringProp name="Argument.name">TESTNAME</stringProp>
            <stringProp name="Argument.value">${__P(TESTNAME, sth_notifications)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="HOST" elementType="Argument">
            <stringProp name="Argument.name">HOST</stringProp>
            <stringProp name="Argument.value">${__P(HOST,qa-bigdata-sth-01)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value">${__P(PORT,8666)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMPUP" elementType="Argument">
            <stringProp name="Argument.name">RAMPUP</stringProp>
            <stringProp name="Argument.value">${__P(RAMPUP,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="THREADS" elementType="Argument">
            <stringProp name="Argument.name">THREADS</stringProp>
            <stringProp name="Argument.value">${__P(THREADS,10)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RUNTIME" elementType="Argument">
            <stringProp name="Argument.name">RUNTIME</stringProp>
            <stringProp name="Argument.value">${__P(RUNTIME, 1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENTITIES" elementType="Argument">
            <stringProp name="Argument.name">ENTITIES</stringProp>
            <stringProp name="Argument.value">${__P(ENTITIES,2)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVICE_PREFIX" elementType="Argument">
            <stringProp name="Argument.name">SERVICE_PREFIX</stringProp>
            <stringProp name="Argument.value">${__P(SERVICE, my_service)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SERVICE_PATH_PREFIX" elementType="Argument">
            <stringProp name="Argument.name">SERVICE_PATH_PREFIX</stringProp>
            <stringProp name="Argument.value">${__P(SERVICE_PATH, /my_serv_path)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENTITY_TYPE_VALUE" elementType="Argument">
            <stringProp name="Argument.name">ENTITY_TYPE_VALUE</stringProp>
            <stringProp name="Argument.value">${__P(ENTITY_TYPE, house)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENTITY_ID_PREFIX" elementType="Argument">
            <stringProp name="Argument.name">ENTITY_ID_PREFIX</stringProp>
            <stringProp name="Argument.value">${__P(ENTITY_ID, room)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ATTRIBUTE_NAME_PREFIX" elementType="Argument">
            <stringProp name="Argument.name">ATTRIBUTE_NAME_PREFIX</stringProp>
            <stringProp name="Argument.value">${__P(ATTR_NAME, temperature)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="MAX_ATTRIBUTE_VALUE" elementType="Argument">
            <stringProp name="Argument.name">MAX_ATTRIBUTE_VALUE</stringProp>
            <stringProp name="Argument.value">${__P(MAX_ATTR_VALUE, 100)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ATTRIBUTE_TYPE" elementType="Argument">
            <stringProp name="Argument.name">ATTRIBUTE_TYPE</stringProp>
            <stringProp name="Argument.value">${__P(ATTR_TYPE, float)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="General Settings" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PROJECT" elementType="Argument">
            <stringProp name="Argument.name">PROJECT</stringProp>
            <stringProp name="Argument.value">sth_notifications</stringProp>
            <stringProp name="Argument.desc">project name</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OUTPUT_DIR" elementType="Argument">
            <stringProp name="Argument.name">OUTPUT_DIR</stringProp>
            <stringProp name="Argument.value">/tmp/JMeter_result/${TESTNAME}/result_${__time(YMDHMS,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">output csv path</stringProp>
          </elementProp>
          <elementProp name="POSTFIX_FILES" elementType="Argument">
            <stringProp name="Argument.name">POSTFIX_FILES</stringProp>
            <stringProp name="Argument.value">__${__time(YMDHMS,)}_IP_${HOST}_x${THREADS}Threads_x${ENTITIES}Entities</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">files postfix in results</stringProp>
          </elementProp>
          <elementProp name="MON_PORT" elementType="Argument">
            <stringProp name="Argument.name">MON_PORT</stringProp>
            <stringProp name="Argument.value">4444</stringProp>
            <stringProp name="Argument.desc">Monitor Performance Port (server agent)</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOADOSOPHIA_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">LOADOSOPHIA_TOKEN</stringProp>
            <stringProp name="Argument.value">loadosophia_upload_token</stringProp>
            <stringProp name="Argument.desc">loadosophia token</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ITERATIONS" elementType="Argument">
            <stringProp name="Argument.name">ITERATIONS</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">number of repetitions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PATH" elementType="Argument">
            <stringProp name="Argument.name">PATH</stringProp>
            <stringProp name="Argument.value">/notify</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">notification path</stringProp>
          </elementProp>
          <elementProp name="USER_AGENT" elementType="Argument">
            <stringProp name="Argument.name">USER_AGENT</stringProp>
            <stringProp name="Argument.value">orion/0.20.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">user agent to http header</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${HOST}</stringProp>
        <stringProp name="HTTPSampler.port">${PORT}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path">${PATH}</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="200 OK" enabled="true">
        <collectionProp name="Asserion.test_strings">
          <stringProp name="49586">200</stringProp>
        </collectionProp>
        <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
        <boolProp name="Assertion.assume_success">false</boolProp>
        <intProp name="Assertion.test_type">16</intProp>
      </ResponseAssertion>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 3" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 4" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 5" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 6" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 7" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_7</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 8" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 9" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_9</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NOTIFICATIONS per SERVICE No 10" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${ITERATIONS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RAMPUP}</stringProp>
        <longProp name="ThreadGroup.start_time">1410941112000</longProp>
        <longProp name="ThreadGroup.end_time">1410941112000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="SERVICE_PATH_ENTITY_COUNTER" elementType="Argument">
              <stringProp name="Argument.name">SERVICE_PATH_ENTITY_COUNTER</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">service path and entity id postfix initial value</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Entities counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">${ENTITIES}</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">ENTITIES_COUNTER</stringProp>
          <stringProp name="CounterConfig.format">0000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments"> run time of each thread</stringProp>
          <stringProp name="RunTime.seconds">${RUNTIME}</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="simple- JSON" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;subscriptionId&quot; : &quot;51c0ac9ed714fb3b37d7d5a8&quot;,&#xd;
  &quot;originator&quot; : &quot;localhost&quot;,&#xd;
  &quot;contextResponses&quot; : [&#xd;
    {&#xd;
      &quot;contextElement&quot; : {&#xd;
        &quot;attributes&quot; : [&#xd;
          {&#xd;
            &quot;name&quot; : &quot;${ATTRIBUTE_NAME_PREFIX}_${ENTITIES_COUNTER}&quot;,&#xd;
            &quot;type&quot; : &quot;${ATTRIBUTE_TYPE}&quot;,&#xd;
            &quot;value&quot; :&quot;${__Random(1, ${MAX_ATTRIBUTE_VALUE})}&quot;&#xd;
          }&#xd;
        ],&#xd;
        &quot;type&quot; : &quot;${ENTITY_TYPE_VALUE}&quot;,&#xd;
        &quot;isPattern&quot; : &quot;false&quot;,&#xd;
        &quot;id&quot; : &quot;${ENTITY_ID_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}&quot;&#xd;
      },&#xd;
      &quot;statusCode&quot; : {&#xd;
        &quot;code&quot; : &quot;200&quot;,&#xd;
        &quot;reasonPhrase&quot; : &quot;OK&quot;&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="service path-entity postfix" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">int thread_number = ctx.getThreadNum();
int entities = Integer.parseInt(vars.get(&quot;ENTITIES&quot;)); 

int service_path_entities_counter = Math.ceil(thread_number / entities);

vars.put(&quot;SERVICE_PATH_ENTITY_COUNTER&quot;, service_path_entities_counter.toString());

</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">${USER_AGENT}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-Service</stringProp>
                  <stringProp name="Header.value">${SERVICE_PREFIX}_10</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Fiware-ServicePath</stringProp>
                  <stringProp name="Header.value">${SERVICE_PATH_PREFIX}_${SERVICE_PATH_ENTITY_COUNTER}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename">${OUTPUT_DIR}/AggregateReport${POSTFIX_FILES}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Requests/Responses Errors " enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">${OUTPUT_DIR}/ERRORS_${POSTFIX_FILES}.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="PerfMon Metrics main node" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <collectionProp name="metricConnections">
          <collectionProp name="-1629844088">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="-1152144878">${MON_PORT}</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="364408887">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="-1152144878">${MON_PORT}</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="351529034">
            <stringProp name="1180709214">${HOST}</stringProp>
            <stringProp name="-1152144878">${MON_PORT}</stringProp>
            <stringProp name="82881">TCP</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">${OUTPUT_DIR}/perforMonitor_Main${POSTFIX_FILES}.csv</stringProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <kg.apc.jmeter.reporters.LoadosophiaUploader guiclass="kg.apc.jmeter.reporters.LoadosophiaUploaderGui" testclass="kg.apc.jmeter.reporters.LoadosophiaUploader" testname="Loadosophia.report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="project">${TESTNAME}</stringProp>
        <stringProp name="uploadToken">${LOADOSOPHIA_TOKEN}</stringProp>
        <stringProp name="storeDir">${OUTPUT_DIR}</stringProp>
        <stringProp name="color">green</stringProp>
        <stringProp name="title">${POSTFIX_FILES}</stringProp>
        <boolProp name="useOnline">true</boolProp>
      </kg.apc.jmeter.reporters.LoadosophiaUploader>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
